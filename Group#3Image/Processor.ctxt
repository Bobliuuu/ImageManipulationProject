#BlueJ class context
comment0.target=Processor
comment0.text=\n\ Processor\ class\ -\ The\ class\ that\ processes\ the\ desigred\ image.\ \n\ <p>\n\ This\ class\ manipulates\ Java\ BufferedImages,\ which\ are\ effectively\ 2d\ arrays\n\ of\ pixels.\ Each\ pixel\ is\ a\ single\ integer\ packed\ with\ 4\ values\ inside\ it.\ \n\ </p>\n\ <p>\n\ This\ class\ contains\ many\ utility\ methods,\ each\ which\ manipulate\ the\ image\ in\ different\ ways.\ \n\ There\ are\ methods\ to\ colorify\ the\ image,\ add\ a\ filter\ to\ it,\ distort\ it,\ transform\ it,\ sharpen\ it,\ or\ even\ add\ hidden\ text\ to\ it\!\ \n\ The\ documentation\ for\ each\ specific\ method\ can\ be\ found\ below.\ \n\ There\ are\ also\ two\ modular\ methods\ for\ dealing\ with\ bit\ shift\ operators.\ They\ are\ unpackPixel()\ and\ packagePixel().\ The\ first\n\ extracts\ the\ RGB\ and\ alpha\ values\ of\ a\ certain\ color\ integer\ (color\ to\ pixel\ conversion),\ and\ the\ second\ does\ the\ opposite\ by\ \n\ "packing"\ the\ four\ integers\ back\ into\ a\ color\ integer.\ \n\ </p>\n\ \n\ @author\ Jerry\ Zhu,\ Matthew\ Gong,\ Jordan\ Cohen\n\ @version\ December\ 2021\n
comment1.params=bi\ colorR\ colorG\ colorB\ changeR\ changeG\ changeB
comment1.target=void\ colorify(java.awt.image.BufferedImage,\ int,\ int,\ int,\ int,\ int,\ int)
comment1.text=\n\ General\ colorify\ method\ that\ will\ turn\ the\ RGB\ pixels\ of\ an\ image\ into\ a\ certain\ colour\n\ Works\ for\ any\ color\ (R,\ G,\ B)\ and\ increment/decrement\ values\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ @param\ colorR\ \ \ \ The\ red\ value\ of\ the\ desired\ color\ \n\ @param\ colorG\ \ \ \ The\ green\ value\ of\ the\ desired\ color\ \n\ @param\ colorB\ \ \ \ The\ blue\ value\ of\ the\ desired\ color\ \n\ @param\ changeR\ \ \ The\ change\ in\ the\ red\ value\ after\ one\ iteration\ of\ the\ method\n\ @param\ changeG\ \ \ The\ change\ in\ the\ green\ value\ after\ one\ iteration\ of\ the\ method\n\ @param\ changeB\ \ \ The\ change\ in\ the\ blue\ value\ after\ one\ iteration\ of\ the\ method\n\ \n\ @auther\ Jerry\ Zhu\n
comment10.params=bi
comment10.target=void\ orange(java.awt.image.BufferedImage)
comment10.text=\n\ Make\ the\ image\ more\ orange\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ orange's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment11.params=bi
comment11.target=void\ green(java.awt.image.BufferedImage)
comment11.text=\n\ Make\ the\ image\ more\ green\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ green's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment12.params=bi
comment12.target=void\ grayScale(java.awt.image.BufferedImage)
comment12.text=\n\ Convert's\ each\ pixel's\ RGB\ value\ of\ the\ image\ to\ the\ average\ of\ the\ RGB\ values\ by\ using\ the\ grayscale\ algorithm\n\ Reference\:\ https\://en.wikipedia.org/wiki/Grayscale\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment13.params=bi
comment13.target=void\ weightedGrayScale(java.awt.image.BufferedImage)
comment13.text=\n\ Uses\ a\ weighted\ greyscale\ algorithm\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment14.params=bi
comment14.target=void\ negative(java.awt.image.BufferedImage)
comment14.text=\n\ Sets\ each\ pixel's\ RGB\ value\ to\ it's\ negative\ value\ (255\ -\ value)\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment15.params=bi
comment15.target=void\ brighten(java.awt.image.BufferedImage)
comment15.text=\n\ Increases\ the\ RGB\ values\ of\ each\ pixel\ to\ make\ the\ image\ brighter\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment16.params=bi
comment16.target=void\ darken(java.awt.image.BufferedImage)
comment16.text=\n\ Decreases\ the\ red,\ green\ and\ blue\ values\ of\ each\ pixel\ to\ make\n\ image\ darker\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment17.params=bi
comment17.target=void\ sepia(java.awt.image.BufferedImage)
comment17.text=\n\ Adds\ a\ sepia\ filter\ to\ the\ image\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment18.params=bi
comment18.target=void\ luminance(java.awt.image.BufferedImage)
comment18.text=\n\ Adds\ a\ luminance\ filter\ to\ the\ image\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment19.params=bi
comment19.target=void\ warmer(java.awt.image.BufferedImage)
comment19.text=\n\ Make\ image\ warmer\ by\ increasing\ it's\ red\ values\ while\ decreasing\ its\ blue\ and\ green\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment2.params=bi
comment2.target=void\ brown(java.awt.image.BufferedImage)
comment2.text=\n\ Make\ the\ image\ more\ brown\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ brown's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment20.params=bi
comment20.target=void\ cooler(java.awt.image.BufferedImage)
comment20.text=\n\ Make\ image\ cooler\ by\ increasing\ it's\ blue\ and\ green\ values\ while\ decreasing\ its\ red\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment21.params=bi
comment21.target=void\ moreTransparent(java.awt.image.BufferedImage)
comment21.text=\n\ Make\ image\ more\ transparent\ by\ increasing\ it's\ alpha\ value\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment22.params=bi
comment22.target=void\ lessTransparent(java.awt.image.BufferedImage)
comment22.text=\n\ Make\ image\ less\ transparent\ by\ decreasing\ it's\ alpha\ value\n\ Less\ transparent\ means\ more\ opaque\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment23.params=bi
comment23.target=void\ fastBlur(java.awt.image.BufferedImage)
comment23.text=\n\ Blur\ the\ image\ by\ putting\ the\ pixel\ values\ closer\ together\n\ Uses\ blur\ matrix\:\ |1/9|1/9|1/9|1/9|1/9|1/9|1/9|1/9|1/9|\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment24.params=bi
comment24.target=void\ gaussianBlur(java.awt.image.BufferedImage)
comment24.text=\n\ Applies\ a\ gaussian\ blur\ effect\ to\ the\ image.\ Algorithm\ from\ Stack\ Overflow\:\n\ https\://stackoverflow.com/questions/39684820/java-implementation-of-gaussian-blur\ \n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment25.params=bi\ pixelSize
comment25.target=void\ pixelate(java.awt.image.BufferedImage,\ int)
comment25.text=\n\ Pixelate\ method\ to\ make\ an\ image\ less\ defined\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ @param\ percentage\ \ \ \ The\ percentage\ of\ adjustment\n\ \n\ @author\ Jerry\ Zhu\n
comment26.params=bi\ percentage
comment26.target=void\ contrast(java.awt.image.BufferedImage,\ double)
comment26.text=\n\ Adjusts\ the\ contrast\ based\ on\ a\ percentage\n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ @param\ percentage\ \ \ \ The\ percentage\ of\ adjustment\n\ \n\ @author\ Jerry\ Zhu\n
comment27.params=bi\ percentage
comment27.target=void\ adjustHue(java.awt.image.BufferedImage,\ float)
comment27.text=\ \n\ Adjust\ the\ hues\ of\ the\ ased\ on\ a\ percentage.\ Method\ used\:\ \n\ https\://docs.oracle.com/javase/7/docs/api/java/awt/Color.html\#RGBtoHSB(int,%20int,%20int,%20float[])\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ @param\ percentage\ \ \ \ The\ percentage\ of\ adjustment\n\ \n\ @author\ Jerry\ Zhu\n
comment28.params=bi
comment28.target=void\ swapRGB(java.awt.image.BufferedImage)
comment28.text=\n\ Swaps\ the\ RGB\ values\ \n\ red\ ->\ blue,\ blue\ ->\ green,\ green\ ->\ red\n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment29.params=bi\ a\ b
comment29.target=void\ distort(java.awt.image.BufferedImage,\ double,\ double)
comment29.text=\n\ Distorts\ the\ image\ into\ a\ swirl\ using\ bilinear\ interpolation\:\ \n\ https\://stackoverflow.com/questions/225548/resources-for-image-distortion-algorithms\n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ @param\ percentage\ \ \ \ The\ percentage\ of\ adjustment\n\ \n\ @author\ Jerry\ Zhu\n
comment3.params=bi
comment3.target=void\ gray(java.awt.image.BufferedImage)
comment3.text=\n\ Make\ the\ image\ more\ gray\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ gray's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment30.params=bi
comment30.target=void\ spherify(java.awt.image.BufferedImage)
comment30.text=\n\ Distorts\ the\ imagine\ into\ a\ spherical\ shape\n\ Credit\:\ http\://popscan.blogspot.com/2012/04/fisheye-lens-equation-simple-fisheye.html\n\ \n\ @param\ bi\ \ \ \ the\ image\ to\ be\ distorted\n\ \n\ @author\ Jerry\ Zhu\n
comment31.params=bi\ density
comment31.target=void\ noise(java.awt.image.BufferedImage,\ int)
comment31.text=\n\ Distorts\ the\ image\ by\ adding\ randomized\ noise\ \n\ https\://www.codeproject.com/Questions/98491/Adding-random-noise-to-an-image\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment32.params=bi\ threshold
comment32.target=void\ solarize(java.awt.image.BufferedImage,\ int)
comment32.text=\n\ Solarizes\ the\ image\ based\ on\ a\ threshold\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment33.params=bi\ i\ j\ xSize\ ySize\ colorPosition
comment33.target=int\ getSobelFilter(java.awt.image.BufferedImage,\ int,\ int,\ int,\ int,\ int)
comment34.params=bi
comment34.target=void\ edges(java.awt.image.BufferedImage)
comment34.text=\n\ Make\ the\ edges\ more\ defined\ using\ a\ sobel\ operator\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment35.params=bi
comment35.target=void\ laplace(java.awt.image.BufferedImage)
comment35.text=\n\ Removes\ randomized\ noise\ from\ the\ image\ and\ adds\ a\ Laplace\ Filter\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment36.params=bi
comment36.target=void\ emboss(java.awt.image.BufferedImage)
comment36.text=\n\ Adds\ an\ emboss\ filter\ to\ the\ iamge\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment37.params=message
comment37.target=java.lang.String\ encodeMessage(java.lang.String)
comment37.text=\n\ Encodes\ a\ string\ into\ a\ binary\ string\n\ \n\ @param\ message\ \ \ \ \ The\ string\ message\ to\ be\ encoded\n\ @return\ String\ \ \ \ \ The\ converted\ binary\ string\n\ \n\ @author\ Jerry\ Zhu\n
comment38.params=bit\ bi
comment38.target=void\ encodeImage(java.lang.String,\ java.awt.image.BufferedImage)
comment38.text=\n\ Encodes\ a\ binary\ string\ into\ an\ image\n\ \n\ @param\ bit\ \ \ \ \ \ \ \ \ The\ binary\ string\ to\ be\ encoded\n\ @param\ bi\ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment39.params=encoded
comment39.target=java.lang.String\ getMessage(java.lang.String)
comment39.text=\n\ Decodes\ the\ regular\ string\ from\ a\ binary\ string\n\ \n\ @param\ encoded\ \ \ \ \ The\ encoded\ binary\ string\ recieved\ from\ the\ image\n\ @return\ String\ \ \ \ \ The\ regular\ decoded\ string\n\ \n\ @author\ Jerry\ Zhu\n
comment4.params=bi
comment4.target=void\ red(java.awt.image.BufferedImage)
comment4.text=\n\ Make\ the\ image\ more\ red\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ red's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment40.params=bi
comment40.target=java.lang.String\ decodeMessage(java.awt.image.BufferedImage)
comment40.text=\n\ Decodes\ the\ bit\ string\ from\ a\ BufferedImage\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ @return\ String\ \ \ \ \ The\ decoded\ message\ in\ the\ form\ of\ a\ binary\ string\n\ \n\ @author\ Jerry\ Zhu\n
comment41.params=bi
comment41.target=void\ sharpen(java.awt.image.BufferedImage)
comment41.text=\n\ Sharpens\ an\ image\ to\ make\ it\ more\ defined\n\n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment42.params=bi
comment42.target=java.awt.image.BufferedImage\ rotate90Clockwise(java.awt.image.BufferedImage)
comment42.text=\n\ Rotates\ an\ image\ 90\ degrees\ clockwise\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Matthew\ Gong\n
comment43.params=bi
comment43.target=java.awt.image.BufferedImage\ rotate90CounterClockwise(java.awt.image.BufferedImage)
comment43.text=\n\ Rotates\ an\ image\ 90\ degrees\ counterclockwise\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Matthew\ Gong\n
comment44.params=bi
comment44.target=void\ flipHorizontal(java.awt.image.BufferedImage)
comment44.text=\n\ Flips\ an\ image\ horizontally\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Matthew\ Gong\n
comment45.params=bi
comment45.target=void\ flipVertical(java.awt.image.BufferedImage)
comment45.text=\n\ Flips\ an\ image\ vertically\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Matthew\ Gong\n
comment46.params=bi
comment46.target=int\ getDominantColor(java.awt.image.BufferedImage)
comment46.text=\n\ Gets\ the\ dominant\ color\ of\ a\ BufferedImage\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment47.params=bi\ startX\ startY\ width\ height
comment47.target=java.awt.image.BufferedImage\ getCroppedImage(java.awt.image.BufferedImage,\ int,\ int,\ int,\ int)
comment47.text=\n\ Takes\ a\ BufferedImage\ and\ crops\ it\ to\ its\ desired\ size.\ Method\ used\:\ \n\ https\://docs.oracle.com/javase/7/docs/api/java/awt/image/BufferedImage.html\#getSubimage(int,%20int,%20int,%20int)\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ @return\ BufferedImage\ \ The\ updated\ and\ cropped\ BufferedImage\n\ \n\ @author\ Jerry\ Zhu\n
comment48.params=bi
comment48.target=greenfoot.GreenfootImage\ createGreenfootImageFromBI(java.awt.image.BufferedImage)
comment48.text=\n\ Takes\ in\ a\ BufferedImage\ and\ returns\ a\ GreenfootImage.\n\ \n\ @param\ bi\ The\ BufferedImage\ to\ convert.\n\ \n\ @return\ GreenfootImage\ \ \ A\ GreenfootImage\ built\ from\ the\ BufferedImage\ provided.\n\ \n\ @author\ Jordan\ Cohen\n
comment49.params=rgbaValue
comment49.target=int[]\ unpackPixel(int)
comment49.text=\n\ Takes\ in\ an\ rgb\ value\ -\ the\ kind\ that\ is\ returned\ from\ BufferedImage's\n\ getRGB()\ method\ -\ and\ returns\ 4\ integers\ for\ easy\ manipulation.\n\ \n\ @param\ rgbaValue\ The\ value\ of\ a\ single\ pixel\ as\ an\ integer,\ representing<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 8\ bits\ for\ red,\ green\ and\ blue\ and\ 8\ bits\ for\ alpha\:<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>00000000000000000000000000000000</pre>\n\ @return\ int[4]\ \ \ Array\ containing\ 4\ shorter\ ints<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>0\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ 3</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @author\ Jordan\ Cohen\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n
comment5.params=bi
comment5.target=void\ yellow(java.awt.image.BufferedImage)
comment5.text=\n\ Make\ the\ image\ more\ yellow\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ yellow's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment50.params=r\ g\ b\ a
comment50.target=int\ packagePixel(int,\ int,\ int,\ int)
comment50.text=\n\ Takes\ in\ a\ red,\ green,\ blue\ and\ alpha\ integer\ and\ uses\ bit-shifting\n\ to\ package\ all\ of\ the\ data\ into\ a\ single\ integer.\n\ \n\ @param\ \ \ int\ red\ value\ (0-255)\n\ @param\ \ \ int\ green\ value\ (0-255)\n\ @param\ \ \ int\ blue\ value\ (0-255)\n\ @param\ \ \ int\ alpha\ value\ (0-255)\n\ \n\ @return\ int\ \ Integer\ representing\ 32\ bit\ integer\ pixel\ ready\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ BufferedImage\n\ \n\ @author\ Jordan\ Cohen\n
comment6.params=bi
comment6.target=void\ blue(java.awt.image.BufferedImage)
comment6.text=\n\ Make\ the\ image\ more\ blue\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ blue's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment7.params=bi
comment7.target=void\ purple(java.awt.image.BufferedImage)
comment7.text=\n\ Make\ the\ image\ more\ purple\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ purple's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment8.params=bi
comment8.target=void\ black(java.awt.image.BufferedImage)
comment8.text=\n\ Make\ the\ image\ more\ black\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ black's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
comment9.params=bi
comment9.target=void\ pink(java.awt.image.BufferedImage)
comment9.text=\n\ Make\ the\ image\ more\ pink\ by\ making\ the\ image's\ pixel\ values\ closer\ to\ pink's\ RGB\ values\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ \n\ @author\ Jerry\ Zhu\n
numComments=51
